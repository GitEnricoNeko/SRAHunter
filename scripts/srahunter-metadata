#!/bin/bash

# SRAHunter Bash Script
# Copyright (C) 2024 Bortoletto Enrico
#
# Description:
# This script processes an input file containing SRA accession numbers. It splits the file into smaller parts, 
# retrieves metadata for each accession number from the NCBI SRA database using efetch, and compiles this metadata 
# into a single file. It's designed to handle large sets of accession numbers by breaking them into manageable chunks.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation 
# the rights to use, modify, merge,and to permit persons to whom the Software is furnished to do so, 
# subject to the following conditions:
# - Cite the pubblication or the github page into your paper

# Check for dependencies
dependencies=( "efetch" "realpath")
for dep in "${dependencies[@]}"; do
    if ! command -v "$dep" &> /dev/null; then
        echo "Error: $dep is not installed. Please install $dep to continue."
        exit 1
    fi
done

print_usage() {
# Using pyfiglet within Bash
python3 << 'EOF'
import pyfiglet

text = "SRAHunter"
ascii_art = pyfiglet.figlet_format(text)
print(ascii_art)
EOF



   echo "ﾐ ᵕ̣̣ ﻌ ᵕ̣̣ ﾐ Hi guys, here the instructions !"
   echo "       -h print tool help"
   echo "       -i input file (mandatory)"
}


# Using pyfiglet within Bash
python3 << 'EOF'
import pyfiglet

text = "SRAHunter"
ascii_art = pyfiglet.figlet_format(text)
print(ascii_art)
EOF
#!/bin/bash

# Your main script functions
main_function() {

 if [ -z "$i" ]; then
    echo "Error: Input file not specified."
    print_usage
    exit 1
 fi

 echo -ne 'splitting your file in smaller files\033[0K\r'
 mkdir -p tmp_neko output_srahunter
 split -l 100 "$i" tmp_neko/part_
 a=$(wc -l < "$i")
 find tmp_neko -type f -name "part_*" -print0 | xargs -0 realpath > tmp_neko/file_list
 # Header for the final output file
 echo 'Run,ReleaseDate,LoadDate,spots,bases,spots_with_mates,avgLength,size_MB,AssemblyName,download_path,Experiment,LibraryName,LibraryStrategy,LibrarySelection,LibrarySource,LibraryLayout,InsertSize,InsertDev,Platform,Model,SRAStudy,BioProject,Study_Pubmed_id,ProjectID,Sample,BioSample,SampleType,TaxID,ScientificName,SampleName,g1k_pop_code,source,g1k_analysis_group,Subject_ID,Sex,Disease,Tumor,Affection_Status,Analyte_Type,Histological_Type,Body_Site,CenterName,Submission,dbgap_study_accession,Consent,RunHash,ReadHash' > SRA_info.csv

 #Obtaining metadata from SRA
 while read -r line; do 
    efetch -input "$line" -db sra -format runinfo | tail -n +2 >> SRA_info_prov.txt
    awk 'BEGIN{FS=OFS=","}  FNR==NR{arr[$1];next} (($1) in arr)' "$line" SRA_info_prov.txt >> SRA_info.csv
    b=$(wc -l < SRA_info.csv)
    echo -ne 'retrieving metadata from NCBI sra '$b'-'$a'\033[0K\r'
    rm "$line" SRA_info_prov.txt
 done < tmp_neko/file_list
 wget https://raw.githubusercontent.com/GitEnricoNeko/SRAHunter/main/utils/SRAHunter_config.yaml -q
 datavzrd SRAHunter_config.yaml -o output_srahunter/SRA_html --overwrite-output
 rm SRAHunter_config.yaml
 rm -rf tmp_neko
 error=`cat SRA_info.csv "$i" | cut -f1 -d, | sort | uniq -c | grep -E "^ *1 " | grep -v "Run" | sed 's/^ *1 //'`
 mv SRA_info.csv output_srahunter/
 if [[ -n "$error" ]]; then
    echo "$error">failed_metadata.csv
    failed=`wc -l <failed_metadata.csv`
    echo "Impossible to retrieve metadat informations for "$failed" samples, check failed_metadata.csv for more informations"
    echo ""
    echo ""
    echo "Thank you for choosing SRAhunter, please remember to cite our pubblication: or the github page "
 else
    echo "All metadata sucessfull retrieved saved in output_srahunter folder CSV: SRA_info.csv and interactive html: SRA_html folder (double-click on index.html file)"
    echo ""
    echo ""
    echo "Thank you for choosing SRAhunte,r please remember to cite our pubblication: or the github page "
 fi
}

# Test function
run_tests() {
    echo "Running tests..."

    # Example test 1: Test a specific functionality
    wget https://raw.githubusercontent.com/GitEnricoNeko/SRAHunter/main/test/test_list -q
    srahunter-metadata -i test_list &>testlog.txt

    expected_output=1
    actual_output=$(grep -c "SRR" output_srahunter/SRA_info.csv)  # Replace with actual function call
    if [ "$actual_output" = "$expected_output" ]; then
        echo "Test passed"
        rm  -r output_srahunter testlog.txt test_list
    else
        echo "Test failed check testlog.txt"
        rm  -r SRA_info.csv test_list SRA_html output_srahunter
    fi
}

# Check for --test flag before processing other options
if [ "$1" = "--test" ]; then
    run_tests
    exit 0
fi

while getopts "i:h" o; do
  case "${o}" in
    i) i="$OPTARG" ;;
    h) print_usage 
       exit 1 ;;
    ?) print_usage
       exit 1 ;;
  esac
done

main_function